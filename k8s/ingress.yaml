apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orchestrator-ingress
  namespace: orchestrator
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
spec:
  tls:
  - hosts:
    - orchestrator.example.com
    secretName: tls-secret
  rules:
  - host: orchestrator.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-orchestrator
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-orchestrator
            port:
              number: 5000
      - path: /health
        pathType: Exact
        backend:
          service:
            name: frontend-orchestrator
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: backend-orchestrator
            port:
              number: 5000 