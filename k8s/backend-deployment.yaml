apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator-backend
  namespace: orchestrator
  labels:
    app: orchestrator-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestrator-backend
  template:
    metadata:
      labels:
        app: orchestrator-backend
    spec:
      containers:
      - name: backend
        image: orchestrator-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: orchestrator-config
              key: NODE_ENV
        - name: MONGO_URI
          valueFrom:
            configMapKeyRef:
              name: orchestrator-config
              key: MONGO_URI
        - name: DOCKER_HOST
          valueFrom:
            configMapKeyRef:
              name: orchestrator-config
              key: DOCKER_HOST
        - name: INSTANCE_ID
          valueFrom:
            configMapKeyRef:
              name: orchestrator-config
              key: INSTANCE_ID
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: orchestrator-secrets
              key: JWT_SECRET
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      restartPolicy: Always 