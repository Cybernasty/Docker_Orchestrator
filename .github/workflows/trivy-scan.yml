name: Trivy Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_HUB_USERNAME: cybermonta

jobs:
  trivy-filesystem-scan:
    name: 🔍 Trivy Filesystem Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-fs-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: false
        
    - name: Upload Trivy filesystem scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-fs-results.sarif'
        
    - name: Check for critical vulnerabilities in filesystem
      run: |
        if [ -f trivy-fs-results.sarif ]; then
          if grep -q '"level":"error"' trivy-fs-results.sarif; then
            echo "❌ Critical vulnerabilities found in filesystem!"
            echo "📊 Check the Security tab for details"
            exit 1
          fi
          echo "✅ No critical vulnerabilities found in filesystem"
        else
          echo "⚠️ Trivy filesystem scan results not found"
        fi

  build-and-scan-images:
    name: 🐳 Build and Scan Docker Images
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build backend image
      run: |
        docker build -t ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-backend:${{ github.sha }} backend_orchestrator
        docker build -t ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-backend:latest backend_orchestrator
        
    - name: Build frontend image
      run: |
        docker build -t ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-frontend:${{ github.sha }} frontend_orchestrator
        docker build -t ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-frontend:latest frontend_orchestrator
        
    - name: Run Trivy vulnerability scanner on backend image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-backend:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-backend-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Run Trivy vulnerability scanner on frontend image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-frontend:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-frontend-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Upload Trivy backend scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-backend-results.sarif'
        
    - name: Upload Trivy frontend scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-frontend-results.sarif'
        
    - name: Check for critical vulnerabilities in images
      run: |
        echo "🔍 Checking for critical vulnerabilities in Docker images..."
        
        if [ -f trivy-backend-results.sarif ]; then
          if grep -q '"level":"error"' trivy-backend-results.sarif; then
            echo "❌ Critical vulnerabilities found in backend image!"
            echo "📊 Backend image: ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-backend:${{ github.sha }}"
            exit 1
          fi
          echo "✅ No critical vulnerabilities found in backend image"
        fi
        
        if [ -f trivy-frontend-results.sarif ]; then
          if grep -q '"level":"error"' trivy-frontend-results.sarif; then
            echo "❌ Critical vulnerabilities found in frontend image!"
            echo "📊 Frontend image: ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-frontend:${{ github.sha }}"
            exit 1
          fi
          echo "✅ No critical vulnerabilities found in frontend image"
        fi
        
        echo "🎉 All Docker images passed Trivy security scan!"
        
    - name: Push secure images
      run: |
        echo "🚀 Pushing secure Docker images..."
        docker push ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-backend:${{ github.sha }}
        docker push ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-backend:latest
        docker push ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-frontend:${{ github.sha }}
        docker push ${{ env.DOCKER_HUB_USERNAME }}/orchestrator-frontend:latest
        echo "✅ All images pushed successfully!"

  security-summary:
    name: 📋 Security Scan Summary
    needs: [trivy-filesystem-scan, build-and-scan-images]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Generate Security Summary
      run: |
        echo "## 🔒 Trivy Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Scans Completed:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Filesystem scan** - Source code vulnerability detection" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Backend image scan** - Docker container security analysis" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Frontend image scan** - Docker container security analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Security Reports:" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 **SARIF Reports**: Available in GitHub Security tab" >> $GITHUB_STEP_SUMMARY
        echo "- 🔍 **Trivy Results**: Vulnerability scans for filesystem and containers" >> $GITHUB_STEP_SUMMARY
        echo "- 🐳 **Docker Images**: Scanned for CVEs and security issues" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. **Review Security Reports**: Check GitHub Security tab for vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "2. **Update Dependencies**: Fix any HIGH/CRITICAL vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        echo "3. **Monitor Continuously**: Security scans run on every push/PR" >> $GITHUB_STEP_SUMMARY
